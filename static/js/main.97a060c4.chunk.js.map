{"version":3,"sources":["components/AppBar/Navigation.jsx","components/AppBar/default-avatar.png","components/AppBar/UserMenu.jsx","components/AppBar/AuthNav.jsx","components/AppBar/AppBar.jsx","components/Container/Container.jsx","components/Routes/PrivateRoute.js","components/Routes/PublicRoute.js","App.js","redux/store.js","index.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/AppBar/AppBar.module.scss","redux/contacts/contact-actions.js","redux/contacts/contact-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contact-reducer.js","components/Container/Container.module.scss"],"names":["connect","state","isAuthenticated","authSelectors","getIsAuthenticated","to","exact","className","s","link","activeClassName","activeLink","logo","useStyles","makeStyles","authBtn","marginLeft","backgroundColor","color","boxShadow","mapDispatchToProps","onLogout","authOperations","logOut","email","getUserEmail","avatar","defaultAvatar","ms","userMenuContainer","Avatar","src","userAvatar","userName","Button","variant","type","onClick","AuthNav","header","Container","children","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","onGetCurrentUser","getCurrentUser","useEffect","fallback","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","user","createReducer","authActions","_","payload","token","setError","error","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logIn","getState","persistedToken","get","getUsername","module","exports","getContactsRequest","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","contactFilter","GET","contactsActions","ADD","description","newContact","number","DELETE","id","delete","getLoading","getFilter","filter","getAllContacts","items","getFilteredContects","createSelector","normalizedFilter","toLowerCase","includes","itemsReducer","filterReducer"],"mappings":"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","file":"static/js/main.97a060c4.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\nimport s from './AppBar.module.scss';\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav>\n    <NavLink to='/' exact className={s.link} activeClassName={s.activeLink}>\n      <h1 className={s.logo}>Phonebook</h1>\n    </NavLink>\n\n    {isAuthenticated && (\n      <NavLink\n        to='/contacts'\n        exact\n        className={s.link}\n        activeClassName={s.activeLink}\n      >\n        Contacts\n      </NavLink>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport defaultAvatar from './default-avatar.png';\nimport s from './AppBar.module.scss';\n\nconst useStyles = makeStyles({\n  authBtn: {\n    marginLeft: 5,\n    backgroundColor: '#6b7cb4',\n    color: 'white',\n\n    '&:hover': {\n      backgroundColor: '#5064a3',\n      boxShadow: 'none',\n    },\n    '&:focus': {\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n    },\n  },\n});\n\nconst UserMenu = ({ email, onLogout }) => {\n  const ms = useStyles();\n\n  return (\n    <div className={s.userMenuContainer}>\n      <Avatar src='/broken-image.jpg' className={s.userAvatar} />\n      <span className={s.userName}>{email}</span>\n\n      <Button\n        variant='contained'\n        className={ms.authBtn}\n        type='button'\n        onClick={onLogout}\n      >\n        Logout\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  email: authSelectors.getUserEmail(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  authBtn: {\n    marginLeft: 5,\n    backgroundColor: '#6b7cb4',\n    color: 'white',\n\n    '&:hover': {\n      backgroundColor: '#5064a3',\n      boxShadow: 'none',\n    },\n    '&:focus': {\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n    },\n  },\n});\n\nconst AuthNav = () => {\n  const ms = useStyles();\n\n  return (\n    <div>\n      <NavLink to='/register' exact>\n        <Button variant='contained' className={ms.authBtn} type='button'>\n          Registration\n        </Button>\n      </NavLink>\n\n      <NavLink to='/login' exact>\n        <Button variant='contained' className={ms.authBtn} type='button'>\n          Login\n        </Button>\n      </NavLink>\n    </div>\n  );\n};\n\nexport default AuthNav;\n","import React from 'react';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\nimport AuthNav from './AuthNav';\nimport s from './AppBar.module.scss';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header className={s.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps, null)(AppBar);\n","import React from 'react';\nimport s from './Container.module.scss';\n\nconst Container = ({ children }) => (\n  <div className={s.Container}>{children}</div>\n);\n\nexport default Container;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\n\n// Вместо пропа component используется render\n// Если юзер залогинен, рендерится Сomponent\n// Если нет, рендерится Redirect\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\n// Если юзер залогинен и маршрут ограничен, рендерится Redirect\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { useEffect, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AppBar from './components/AppBar';\nimport Container from './components/Container';\nimport { authOperations } from './redux/auth';\nimport PrivateRoute from './components/Routes/PrivateRoute';\nimport PublicRoute from './components/Routes/PublicRoute';\n\n// Code splitting\nconst HomeView = lazy(() =>\n  import('./views/HomeView' /*webpackChunkName: \"Home\"*/)\n);\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /*webpackChunkName: \"Register\"*/)\n);\nconst LoginView = lazy(() =>\n  import('./views/LoginView' /*webpackChunkName: \"Login\"*/)\n);\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /*webpackChunkName: \"Contacts\"*/)\n);\n\nconst App = ({ onGetCurrentUser }) => {\n  useEffect(() => {\n    onGetCurrentUser();\n  }, [onGetCurrentUser]);\n\n  return (\n    <Container>\n      <div>\n        <AppBar />\n\n        <Suspense fallback={<p>Loading...</p>}>\n          <Switch>\n            <PublicRoute path='/' exact component={HomeView} />\n            <PublicRoute\n              path='/register'\n              restricted\n              redirectTo='/contacts'\n              component={RegisterView}\n            />\n            <PublicRoute\n              path='/login'\n              restricted\n              redirectTo='/contacts'\n              component={LoginView}\n            />\n            <PrivateRoute\n              path='/contacts'\n              redirectTo='/login'\n              component={ContactsView}\n            />\n          </Switch>\n        </Suspense>\n      </div>\n    </Container>\n  );\n};\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n\n/**\n * Connect (React компоненты)\n * - Props\n * - возвращает новый компонент, который\n * оборачивает наш компонент App и под капотом\n * подписывается к mapStateToProps и mapDispatchToProps\n */\n\n/**\n * Container (React-Redux связь)\n * - mapStateToProps\n * - использует селекторы. Контейнер\n * кидает селектору весь стейт, а селекторы\n * обратно возвращают какойто value из стора.\n * Не контейнеры, не компоненты на прямую со\n * стором не работают. Container - это функция\n * connect, в которой делаются все подписки.\n * Контейнер через селектор получает кусочки\n * стора и кждый раз при обновлении стора\n * вызвыается mapStateToProps и компонент\n * обновляется новыми props.\n */\n\n/**\n * Selector (Redux, часть логики)\n * - Store\n * - вспомогательная функция, получает\n * весь стор от контейнера, делает запрос в стор\n * и из себя возвращает это значение. Селектор\n * знает внутреннюю структуру стора. Его использует\n * контейнер при подписке mapStateToProps\n */\n\n/**\n * Reducer\n * - Store\n * - обновляет стор. Получает предидущее состояние,\n * плюс payload из actions, обрабатывает, и делает\n * следующий стейт\n */\n","import { getDefaultMiddleware, configureStore } from '@reduxjs/toolkit';\n// import logger from 'redux-logger'; // Don't delete\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\n\n// Thunk ловит функции, которые вместо объектов\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger, // Don't delete\n];\n\n// Saves to localStorage\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor }; // eslint-disable-line\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading='Loading...' persistor={store.persistor}>\n        <Router>\n          <App />\n        </Router>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { createAction } from '@reduxjs/toolkit';\n\n// Register\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\n// login\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\n// logout\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\n// Current User\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\n// eslint-disable-next-line\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { authActions } from '../auth';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\n// Юзер залогинен или нет\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\n// It's a State\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import axios from 'axios';\nimport { authActions } from '../auth';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n// Register (POST)\nconst register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token); // Adds token to the Bearer\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n// Log in\nconst logIn = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token); // Adds token to the Bearer\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n// Log out\nconst logOut = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset(); // Remove token from the Bearer\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n// Get Current User\nconst getCurrentUser = () => async (dispatch, getState) => {\n  // Забираем токен из стейта через getState()\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  // Проверяем наличие токена\n  if (!persistedToken) {\n    return;\n  }\n\n  // Добавляем токен в http заголовок\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logOut, logIn, getCurrentUser }; // eslint-disable-line\n","const getIsAuthenticated = (state) => state.auth.isAuthenticated;\n\nconst getUsername = (state) => state.auth.user.name;\n\nconst getUserEmail = (state) => state.auth.user.email;\n\n// eslint-disable-next-line\nexport default {\n  getIsAuthenticated,\n  getUsername,\n  getUserEmail,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__3idJt\",\"link\":\"AppBar_link__2IP1y\",\"logo\":\"AppBar_logo__30Znh\",\"activeLink\":\"AppBar_activeLink__10P6r\",\"userMenuContainer\":\"AppBar_userMenuContainer__268ot\",\"userAvatar\":\"AppBar_userAvatar__3cOBA\",\"userName\":\"AppBar_userName__3xvch\"};","import { createAction } from '@reduxjs/toolkit';\n\n// Synchronous actions\n\n// Get\nexport const getContactsRequest = createAction('contacts/getContactsRequest');\nexport const getContactsSuccess = createAction('contacts/getContactsSuccess');\nexport const getContactsError = createAction('contacts/getContactsError');\n\n// Add\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\n// Delete\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\n// Filter\nexport const contactFilter = createAction('contact/filter');\n","import axios from 'axios';\nimport { contactsActions } from '../contacts';\n\n/**\n * Операция это функция, вызванная в компоненте,\n * которая возвращает другую функцию, в которой\n * выполняются асинх запросы по паттерну:\n * Request > Success > Error\n */\n\n// GET\nexport const GET = () => async (dispatch) => {\n  dispatch(contactsActions.getContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(contactsActions.getContactsSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.getContactsError(error.message));\n  }\n};\n\n// ADD\nexport const ADD = (description) => async (dispatch) => {\n  const newContact = { name: description.name, number: description.number };\n\n  dispatch(contactsActions.addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', newContact);\n    dispatch(contactsActions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.addContactError(error.message));\n  }\n};\n\n// DELETE\nexport const DELETE = (id) => async (dispatch) => {\n  dispatch(contactsActions.deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(contactsActions.deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(contactsActions.deleteContactError(error.message));\n  }\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\n// Простые селекторы\nexport const getLoading = state => state.contacts.loading;\nexport const getFilter = state => state.contacts.filter;\nexport const getAllContacts = state => state.contacts.items;\n\n// Композитный селектор\nexport const getFilteredContects = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n/**\n * Функция получает весь стейт и возвращает маленькую\n * его часть\n */\n\n/* ===========================================\n// ** Before memoization\n\nexport const getFilteredContects = state => {\n  const contacts = getAllContacts(state);\n  const filter = getFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\n------------------------------------------- */\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { contactsActions } from '../contacts';\n\nconst itemsReducer = createReducer([], {\n  [contactsActions.getContactsSuccess]: (_, { payload }) => payload,\n  [contactsActions.addContactSuccess]: (state, { payload }) => [\n    payload,\n    ...state,\n  ],\n  [contactsActions.deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [contactsActions.getContactsRequest]: () => true,\n  [contactsActions.getContactsSuccess]: () => false,\n  [contactsActions.getContactsError]: () => false,\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSuccess]: () => false,\n  [contactsActions.addContactError]: () => false,\n  [contactsActions.deleteContactRequest]: () => true,\n  [contactsActions.deleteContactSuccess]: () => false,\n  [contactsActions.deleteContactError]: () => false,\n});\n\nconst filterReducer = createReducer('', {\n  [contactsActions.contactFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loading,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__11SY1\"};"],"sourceRoot":""}